import coordinacion.modulos.utilidades.OrdenTrabajoComun
import coordinacion.modulos.utilidades.*
import coordinacion.procesos.cori.*
import java.util.Iterator

package coordinacion.procesos.cori.documentos {

	["msdppgg"]
	definition Ptv is document extends coordinacion.procesos.cori.Ptc {
		label = "Parte de trabajo de verificaci√≥n correctivo";
		template = template Ptv;

		schema {
		}

		["mk3taow"]
		definition Importador is importer {
			label = "Importador";
			target = ref Ptv;
			onInitialize() {
			}
			onImportItem(coordinacion.procesos.cori.documentos.ptv.Schema item) {
				var fichaEncargo = this.getScope() as encargos.encargocv.Ficha;
				ParteTrabajoComun :: importarEncargo(fichaEncargo, item);
			}
		}

		["m_h8h1q"]
		definition Exportador is exporter {
			label = "Exportador";
			target = ref Ptv;
			onInitialize() {
		}

			onExportItem(coordinacion.procesos.cori.documentos.ptv.Schema i) {
				var fichaEncargo = this.getScope() as encargos.encargocv.Ficha;
				var encargo = this.getScope().owner as encargos.EncargoCV;
				var coleccion = encargo.owner as encargos.Coleccion;
				var expediente = coleccion.owner as coordinacion.procesos.cori.Expediente;
				var fichaExpediente = expediente.fichaExpedienteCorrectivo;
				var incidencia = fichaExpediente.enlaceIncidenciaField.^node as coordinacion.incidencias.Incidencia;
				i.setFechaInicioReal(fichaEncargo.fechaInicioReal);
				i.setFechaFinReal(fichaEncargo.fechaFinReal);
				i.setCliente(BusinessUnit :: ^name);
				if (fichaExpediente.objetoActuacion != null){
				i.setObjetoActuacion(fichaExpediente.objetoActuacionAsTerm);
					var objetoActuacion = ObjetoActuacionTools.obtenerPadreNode(fichaExpediente.objetoActuacionField.^node);
					var fichaObjeto = objetoActuacion.ficha;
					var seccionLocalizacion = fichaObjeto.localizacionField as coordinacion.objetosactuacion.objetoactuacion.ficha.Localizacion;
//					i.setLugar(seccionLocalizacion.lugar);
//					i.setZona(seccionLocalizacion.zona);					
					if (seccionLocalizacion.lugar != null){
						i.setLugar(seccionLocalizacion.lugar.^label);
					}
//MERGE
//					if(seccionLocalizacion.zona != null){
					if (seccionLocalizacion.zona != null){
						i.setZona(seccionLocalizacion.zona.^label);					
					}
				}
				i.setCodigo(fichaExpediente.codigo);
				i.setIdIncidencia(incidencia.codigoIncidencia);
				i.setTipoIncidencia(incidencia.tipoIncidencia);
				i.setTipoIncidenciaLabel(incidencia.tipoIncidenciaField.toString);
				i.setObservacionesResultado(fichaEncargo.observacionesResultado);
				i.setResultado(fichaEncargo.resultado);
				i.setImagenResultado(fichaEncargo.imagenResultado);
				var Iterator <Picture> iterador = fichaEncargo.getImagenesAnexo().iterator();
				while(iterador.hasNext()) { 
					var coordinacion.procesos.cori.ptc.^schema.Anexo fila = new coordinacion.procesos.cori.ptc.^schema.Anexo();
					fila.setImagen1(iterador.next());
					if(iterador.hasNext()) { 
						fila.setImagen2(iterador.next());
					}
					i.getAnexo().^add(fila);
				}
				//dar soprote en encargos
				//i.setFirmaOperario(fichaEncargo.get)
			}

		}

	}
}
  
